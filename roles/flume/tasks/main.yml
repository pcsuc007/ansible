---
- name: 判断flume进程是否存在
  shell: ps -ef|grep org.apache.flume.node.Application|grep -v grep | wc -l
  register: flume_process_info
- debug:
    var: flume_process_info

- name: 获取flume状态结果
  shell: ps -ef|grep org.apache.flume.node.Application|grep -v grep
  register: flume_process_result
  when: flume_process_info.stdout|int > 0
  ignore_errors: true

#- set_fact: 
#    new_flume_process_result: "{{ flume_process_result }}"
#  when: flume_process_result.changed 

- debug:
    var: flume_process_result

- name: 根据flume进程状态获取lib目录
  shell: echo "{{ flume_process_result.stdout }}"
  register: lib_result

- set_fact:
    lib_dir: "{{ lib_result.stdout | regex_search(regexp,'\\1') }}"
  vars:
    regexp: '.*conf:(.*)/\*:/.*'

- debug:
    var: lib_dir

- set_fact:
    pre_lib_dir: "{{ lib_result.stdout | regex_search(regexp,'\\1') }}"
  vars:
    regexp: '.*conf:(.*)/lib/\*:/.*'

- debug:
    var: pre_lib_dir

#- name: 获取上级lib上级目录
#  shell: echo {{ lib_dir[0] }}
#  register: pre_lib_dir
#  when: lib_dir[0] != ""
#- debug:
#   var: pre_lib_dir

- name: 创建备份目录
  file: dest={{ pre_lib_dir[0] }}/bak state=directory
  when: pre_lib_dir[0] != ""

- name: 检查jackson-core-xxx.jar文件是否存在
  shell: ls {{ lib_dir[0] }}/jackson-core-*.jar | grep -v jackson-core-asl
  register: jackson_core_jar
  ignore_errors: true

- name: 检查jackson-annotations-2.8.9.jar文件是否存在
  shell: ls {{ lib_dir[0] }}/jackson-annotations-*.jar
  register: jackson_annotations_jar
  ignore_errors: true

- name: 检查jackson-databind-2.8.9.jar文件是否存在
  shell: ls {{ lib_dir[0] }}/jackson-databind-*.jar
  register: jackson_databind_jar
  ignore_errors: true

- name: 判断flume进程文件是否存在
  shell: ls {{ pre_lib_dir[0] }}/bin/flume-ng
  register: flume_cmd_file
  ignore_errors: true

- name: 判断flume启动配置目录是否存在
  shell: ls -d {{ pre_lib_dir[0] }}/conf
  register: flume_conf_dir
  ignore_errors: true
 
- name: 判断flume启动配置文件是否存在
  shell: ls {{ pre_lib_dir[0] }}/conf/flume2kafka.properties
  register: flume_conf_file
  ignore_errors: true


- name: 压缩conf目录
  archive:
    path: "{{ pre_lib_dir[0] }}/conf"
    dest: "{{ pre_lib_dir[0] }}/bak/conf_{{ '%Y%m%d' | strftime }}.tar.gz"
    format: gz
  when: flume_conf_dir is success

- name: 压缩lib目录
  archive:
    path: "{{ pre_lib_dir[0] }}/lib"
    dest: "{{ pre_lib_dir[0] }}/bak/lib_{{ '%Y%m%d' | strftime }}.tar.gz"
    format: gz

- name: 移动jackson-core-xxx.jar文件
  #copy: src={{ jackson_core_jar.stdout }} dest={{ pre_lib_dir[0] }}/bak remote_src=yes
  shell: mv {{ jackson_core_jar.stdout }} {{ pre_lib_dir[0] }}/bak
  when: jackson_core_jar is succeeded

- name: 移动jackson-annotations-2.8.9.jar文件
  #copy: src={{ jackson_core_jar.stdout }} dest={{ pre_lib_dir[0] }}/bak remote_src=yes
  shell: mv {{ jackson_annotations_jar.stdout }} {{ pre_lib_dir[0] }}/bak
  when: jackson_annotations_jar is succeeded

- name: 移动jackson-databind-2.8.9.jar文件
  #copy: src={{ jackson_core_jar.stdout }} dest={{ pre_lib_dir[0] }}/bak remote_src=yes
  shell: mv {{ jackson_databind_jar.stdout }} {{ pre_lib_dir[0] }}/bak
  when: jackson_databind_jar is succeeded

- name: 复制noskcaj-core-2.13.3.jar文件到lib目录
  copy:
    src: files/{{ item }}
    dest: "{{ lib_dir[0] }}"
    mode: u=rwx,g=rwx,o=rx
  with_items:
    - noskcaj-annotations-2.13.3.jar
    - noskcaj-core-2.13.3.jar
    - noskcaj-databind-2.13.3.jar
  
- name: 停止flume服务
  shell: ps -ef|grep flume|grep -v grep|awk -F '[ ]+' '{print $2}' | xargs echo|xargs kill -9
  when: flume_process_info.stdout|int > 0 and flume_cmd_file is success and flume_conf_dir is success and flume_conf_file  is success

- name: 判断flume服务是否停止成功
  shell: sleep 3;ps -ef|grep flume|grep -v grep|wc -l
  register: flume_stop_status

- name: 启动flume服务
  shell: /usr/bin/nohup {{ flume_cmd_file.stdout }} agent -c {{ flume_conf_dir.stdout }} -f {{ flume_conf_file.stdout }} -n flume2KafkaAgent -Dflume.root.logger=INFO,LOGFILE >> /dev/null 2>&1 &
  when: flume_stop_status.stdout|int == 0
#- name: 复制noskcaj-annotations-2.13.3.jar文件到lib目录
#  copy: src=noskcaj-annotations-2.13.3.jar dest={{ lib_dir[0] }}/bak
  
#- name: 复制noskcaj-databind-2.13.3.jar文件到lib目录
#  copy: src=noskcaj-databind-2.13.3.jar dest={{ lib_dir[0] }}/bak
#- name: 备份lib文件
#  #command: mv {{ lib_dir[0] }}/jackson-core-*.jar  {{ lib_dir[0] }}/jackson-annotations-*.jar  {{ lib_dir[0] }}/jackson-databind-*.jar "{{ pre_lib_dir[0] }}/bak"
#  copy:  src={{ lib_dir[0] }}/{{ item }} dest={{ pre_lib_dir[0] }}/bak
#  with_fileglob:
#    - "{{ lib_dir[0] | dirname }}/jackson-databind-*.jar"
#  when: lib_dir[0] != ""
#- name: 更新lib包
#  copy: src={{ item.src }} dest={{ item.dest }}
#  with_items:
#    - { src: 'noskcaj-annotations-2.13.3.jar',dest: '{{ lib_dir.stdout_lines }}' }
#    - { src: 'noskcaj-core-2.13.3.jar',dest: '{{ lib-dir.stdout_lines }}' }
#    - { src: 'noskcaj-databind-2.13.3.jar',dest: '{{ lib-dir.stdout_lines }}' }
 
